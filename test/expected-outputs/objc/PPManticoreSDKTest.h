/**
 * PPManticoreSDKTest.h
 *
 * DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED AND SHOULD NOT BE CHECKED IN.
 * 
 *
 * 
 */

#import "PayPalManticoreTypes.h"
#import "PPManticoreJSBackedObject.h"

@class PPManticoreSDKTest;
@class PPManticoreSDKTestDefault;
@class PPManticoreSDKTestDefaultSubclass;

/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
/**
 * This single file basically fakes the real SDK and exercises the various ways the native engines
 * interact with Javascript.
 */
@interface PPManticoreSDKTest : PPManticoreJSBackedObject
/**
 * Starts out as 1.
 */
@property (nonatomic,assign) int itsOne;/**
 * This is @readonly
 */
@property (nonatomic,assign,readonly) int cantTouchThis;/**
 * This is a plain old string property
 */
@property (nonatomic,strong,nullable) NSString* stringProperty;/**
 * This property has accessor functions in JS
 */
@property (nonatomic,strong,nullable) NSString* accessorString;/**
 * Yep.
 */
@property (nonatomic,strong,nullable) PPManticoreSDKTestDefault* complexType;/**
 * fake enum for status.
 */
@property (nonatomic,assign) PPManticoreSDKTestStatuses myStatus;/**
 * Disable SSL requests (I'm looking at you Android Junit)
 */
@property (nonatomic,assign) BOOL noSsl;

- (instancetype _Nullable)initWithStringProperty:(NSString* _Nullable)stringProperty;
    - (instancetype _Nullable)init NS_UNAVAILABLE;
+ (instancetype _Nullable)new NS_UNAVAILABLE;


/**
 * Returns a new instance of this class
 */
+(PPManticoreSDKTest* _Nullable)staticMethod;



/**
 * Echo the argument via the callback
 */
-(void)echo:(NSString* _Nullable)arg callback:(PPManticoreSDKTestEchoHandler _Nullable)callback;

/**
 * Echo the argument via return value from a callback
 */
-(void)echoReturn:(NSString* _Nullable)arg callback:(PPManticoreSDKTestEchoReturnHandler _Nullable)callback;

/**
 * Echo the argument via the callback after setTimeout(10)
 */
-(void)echoWithSetTimeout:(NSString* _Nullable)arg callback:(PPManticoreSDKTestEchoHandler _Nullable)callback;

/**
 * Fire an event
 */
-(void)triggerFakeAfterTimeout;

/**
 * Return a complex object.
 */
-(PPManticoreSDKTestDefault* _Nullable)returnAnObject;

/**
 * Return a derivative of SDKTestDefault
 */
-(PPManticoreSDKTestDefault* _Nullable)returnADerivedObject;

/**
 * Return one SDKTestDefault and one derived
 */
-(NSArray* _Nullable)returnBaseAndDerived;

/**
 * Pre decrement within an indexer --j.
 * Create array c= [a,b], set j=1, set c[--j] = c[j]+add
 * push j to c and return c
 * expected result: c[0] is set to c[0]+add, so, [a+add,b,0]
 */
-(NSArray* _Nullable)preDecrement:(int)a b:(int)b add:(int)add;

/**
 * Post decrement within an indexer j--.
 * Create array c= [a,b], set j=1, set c[j--] = c[j]+add
 * push j to c and return c
 * expected result: c[1] is set to c[0]+add, so, [a,a+add, 0]
 */
-(NSArray* _Nullable)postDecrement:(int)a b:(int)b add:(int)add;

/**
 * Return a JS dictionary
 */
-(NSDictionary* _Nullable)returnAMixedType;

/**
 * Take a JS dictionary and return it
 */
-(NSDictionary* _Nullable)takeAMixedType:(NSDictionary* _Nullable)stuff;

/**
 * Throw an exception
 */
-(void)throwOne;

/**
 * Fetch some JSON from httpbin.org
 */
-(void)goFetch:(PPManticoreSDKTestFetchedHandler _Nullable)callback;

/**
 * Fetch some JSON with promise style interface
 */
-(void)goFetchP:(PPManticoreGoFetchPCallback _Nullable) callback;




/**
 * Add a listener for the fakeEvent event
 * @returns PPManticoreFakeEventSignal an object that can be used to remove the listener when
 * you're done with it.
 */
-(PPManticoreFakeEventSignal _Nullable)addFakeEventListener:(PPManticoreFakeEventEvent _Nullable)listener;

/**
 * Remove a listener for the fakeEvent event given the signal object that was returned from addFakeEventListener
 */
-(void)removeFakeEventListener:(PPManticoreFakeEventSignal _Nullable)listenerToken;


@end
