{
  "rootTypes": {
    "SDKTest": {
      "name": "SDKTest",
      "filename": "test/js-source/SDKTest.js",
      "description": "This single file basically fakes the real SDK and exercises the various ways the native engines\ninteract with Javascript.",
      "methods": [
        {
          "description": "Echo the argument via the callback",
          "name": "echo",
          "args": [
            {
              "name": "arg",
              "type": "string",
              "description": null
            },
            {
              "name": "callback",
              "type": "SDKTest~echo",
              "description": null
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "echo",
          "callbackArgIndex": 1,
          "callbackDtoType": "string"
        },
        {
          "description": "Echo the argument via return value from a callback",
          "name": "echoReturn",
          "args": [
            {
              "name": "arg",
              "type": "string",
              "description": null
            },
            {
              "name": "callback",
              "type": "SDKTest~echoReturn",
              "description": null
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "echoReturn",
          "callbackArgIndex": 1
        },
        {
          "description": "Echo the argument via the callback after setTimeout(10)",
          "name": "echoWithSetTimeout",
          "args": [
            {
              "name": "arg",
              "type": "string",
              "description": null
            },
            {
              "name": "callback",
              "type": "SDKTest~echo",
              "description": null
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "echo",
          "callbackArgIndex": 1,
          "callbackDtoType": "string"
        },
        {
          "description": "Fire an event",
          "name": "triggerFakeAfterTimeout",
          "args": []
        },
        {
          "description": "Return a complex object.",
          "name": "returnAnObject",
          "args": [],
          "returns": {
            "type": "SDKTestDefault",
            "description": "Stuff"
          }
        },
        {
          "description": "Return a derivative of SDKTestDefault",
          "name": "returnADerivedObject",
          "args": [],
          "returns": {
            "type": "SDKTestDefault",
            "description": "Stuff"
          }
        },
        {
          "description": "Return one SDKTestDefault and one derived",
          "name": "returnBaseAndDerived",
          "args": [],
          "returns": {
            "type": "[SDKTestDefault]",
            "description": "array of size 2"
          }
        },
        {
          "description": "Pre decrement within an indexer --j.\nCreate array c= [a,b], set j=1, set c[--j] = c[j]+add\npush j to c and return c\nexpected result: c[0] is set to c[0]+add, so, [a+add,b,0]",
          "name": "preDecrement",
          "args": [
            {
              "name": "a",
              "type": "int",
              "description": null
            },
            {
              "name": "b",
              "type": "int",
              "description": null
            },
            {
              "name": "add",
              "type": "int",
              "description": null
            }
          ],
          "returns": {
            "type": "[int]",
            "description": "Stuff"
          }
        },
        {
          "description": "Post decrement within an indexer j--.\nCreate array c= [a,b], set j=1, set c[j--] = c[j]+add\npush j to c and return c\nexpected result: c[1] is set to c[0]+add, so, [a,a+add, 0]",
          "name": "postDecrement",
          "args": [
            {
              "name": "a",
              "type": "int",
              "description": null
            },
            {
              "name": "b",
              "type": "int",
              "description": null
            },
            {
              "name": "add",
              "type": "int",
              "description": null
            }
          ],
          "returns": {
            "type": "[int]",
            "description": "Stuff"
          }
        },
        {
          "description": "Return a JS dictionary",
          "name": "returnAMixedType",
          "args": [],
          "returns": {
            "type": "object",
            "description": "Stuff"
          }
        },
        {
          "description": "Take a JS dictionary and return it",
          "name": "takeAMixedType",
          "args": [
            {
              "name": "stuff",
              "type": "object",
              "description": null
            }
          ],
          "returns": {
            "type": "object",
            "description": "Stuff"
          }
        },
        {
          "description": "Throw an exception",
          "name": "throwOne",
          "args": []
        },
        {
          "description": "Fetch some JSON from httpbin.org",
          "name": "goFetch",
          "args": [
            {
              "name": "callback",
              "type": "SDKTest~fetched",
              "description": "Called on completion"
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "fetched",
          "callbackArgIndex": 0,
          "callbackDtoType": "object"
        }
      ],
      "staticMethods": [
        {
          "description": "Returns a new instance of this class",
          "name": "staticMethod",
          "args": [],
          "returns": {
            "type": "SDKTest",
            "description": "instance"
          }
        }
      ],
      "fields": [
        {
          "name": "itsOne",
          "type": "int",
          "description": "Starts out as 1."
        },
        {
          "name": "cantTouchThis",
          "type": "int",
          "description": "This is @readonly",
          "readonly": true
        },
        {
          "name": "stringProperty",
          "type": "string",
          "description": "This is a plain old string property"
        },
        {
          "name": "accessorString",
          "type": "string",
          "description": "This property has accessor functions in JS"
        },
        {
          "name": "complexType",
          "type": "SDKTestDefault",
          "description": "Yep."
        },
        {
          "name": "myStatus",
          "type": "SDKTest.Statuses",
          "description": "fake enum for status."
        }
      ],
      "innerTypes": {
        "Statuses": {
          "name": "Statuses",
          "description": "Valid SDK statuses",
          "filename": "test/js-source/SDKTest.js",
          "location": {
            "start": {
              "line": 223,
              "column": 0
            },
            "end": {
              "line": 238,
              "column": 1
            }
          },
          "values": [
            {
              "name": "ON_FIRE",
              "description": "comments matter apparently",
              "value": 0
            },
            {
              "name": "WET",
              "description": "you must write one",
              "value": 1
            },
            {
              "name": "UNINMAGINABLE",
              "description": "just, shhhh.",
              "value": 2
            }
          ],
          "enum": true,
          "type": "int",
          "packedName": "SDKTestStatuses",
          "dottedName": "SDKTest.Statuses"
        }
      },
      "packedName": "SDKTest",
      "dottedName": "SDKTest",
      "instanceConstructor": {
        "description": "Make the class with a particular stringProperty setting",
        "args": [
          {
            "name": "stringProperty",
            "type": "string",
            "description": "initial setting"
          }
        ]
      },
      "events": [
        {
          "name": "fakeEvent",
          "description": "Simple event",
          "containingType": "SDKTest",
          "args": [
            {
              "name": "item",
              "type": "SDKTestDefault",
              "description": "An item."
            }
          ]
        }
      ],
      "callbacks": [
        {
          "description": "Callback for fetch method",
          "args": [
            {
              "name": "error",
              "type": "error",
              "description": "What went wrong"
            },
            {
              "name": "response",
              "type": "object",
              "description": "What the server said"
            }
          ],
          "name": "fetched",
          "type": "SDKTest"
        },
        {
          "description": "Callback for echo method",
          "args": [
            {
              "name": "error",
              "type": "error",
              "description": "What went wrong"
            },
            {
              "name": "arg",
              "type": "string",
              "description": "What you said"
            }
          ],
          "name": "echo",
          "type": "SDKTest"
        },
        {
          "description": "Callback for echo method with return",
          "args": [],
          "name": "echoReturn",
          "returns": {
            "type": "string",
            "description": "arg What you said"
          },
          "type": "SDKTest"
        }
      ]
    },
    "SDKTestDefault": {
      "name": "SDKTestDefault",
      "filename": "test/js-source/SDKTestDefault.js",
      "description": "",
      "methods": [
        {
          "description": "Test closure",
          "name": "isItTrue",
          "args": [],
          "returns": {
            "type": "bool",
            "description": "true"
          }
        }
      ],
      "staticMethods": [],
      "fields": [
        {
          "name": "test",
          "type": "int",
          "description": "It's 1"
        },
        {
          "name": "itsTrue",
          "type": "bool",
          "description": "It's true"
        },
        {
          "name": "itsFalse",
          "type": "bool",
          "description": "It's false"
        },
        {
          "name": "blankInt",
          "type": "int",
          "description": "Starts blank"
        },
        {
          "name": "intOne",
          "type": "int",
          "description": "Starts 1"
        },
        {
          "name": "blankDecimal",
          "type": "decimal",
          "description": "Starts blank"
        },
        {
          "name": "decimalHundredOhOne",
          "type": "decimal",
          "description": "Starts 100.01"
        },
        {
          "name": "nullString",
          "type": "string",
          "description": "It's a null string."
        },
        {
          "name": "now",
          "type": "Date",
          "description": "It's now"
        },
        {
          "name": "stringArray",
          "type": "[string]",
          "description": "An array of a, b, c"
        }
      ],
      "innerTypes": {},
      "packedName": "SDKTestDefault",
      "dottedName": "SDKTestDefault",
      "subclasses": [
        {
          "name": "SDKTestDefaultSubclass",
          "filename": "test/js-source/SDKTestDefault.js",
          "description": "",
          "methods": [
            {
              "description": "Test subclass",
              "name": "isItDerived",
              "args": [],
              "returns": {
                "type": "bool",
                "description": "true"
              }
            }
          ],
          "staticMethods": [
            {
              "description": "Test derived classes",
              "name": "getDerived",
              "args": [],
              "returns": {
                "type": "SDKTestDefault",
                "description": null
              }
            }
          ],
          "fields": [],
          "innerTypes": {},
          "inherits": "SDKTestDefault",
          "packedName": "SDKTestDefaultSubclass",
          "dottedName": "SDKTestDefaultSubclass"
        }
      ]
    },
    "SDKTestDefaultSubclass": {
      "name": "SDKTestDefaultSubclass",
      "filename": "test/js-source/SDKTestDefault.js",
      "description": "",
      "methods": [
        {
          "description": "Test subclass",
          "name": "isItDerived",
          "args": [],
          "returns": {
            "type": "bool",
            "description": "true"
          }
        }
      ],
      "staticMethods": [
        {
          "description": "Test derived classes",
          "name": "getDerived",
          "args": [],
          "returns": {
            "type": "SDKTestDefault",
            "description": null
          }
        }
      ],
      "fields": [],
      "innerTypes": {},
      "inherits": "SDKTestDefault",
      "packedName": "SDKTestDefaultSubclass",
      "dottedName": "SDKTestDefaultSubclass"
    }
  },
  "allTypes": [
    {
      "name": "SDKTest",
      "filename": "test/js-source/SDKTest.js",
      "description": "This single file basically fakes the real SDK and exercises the various ways the native engines\ninteract with Javascript.",
      "methods": [
        {
          "description": "Echo the argument via the callback",
          "name": "echo",
          "args": [
            {
              "name": "arg",
              "type": "string",
              "description": null
            },
            {
              "name": "callback",
              "type": "SDKTest~echo",
              "description": null
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "echo",
          "callbackArgIndex": 1,
          "callbackDtoType": "string"
        },
        {
          "description": "Echo the argument via return value from a callback",
          "name": "echoReturn",
          "args": [
            {
              "name": "arg",
              "type": "string",
              "description": null
            },
            {
              "name": "callback",
              "type": "SDKTest~echoReturn",
              "description": null
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "echoReturn",
          "callbackArgIndex": 1
        },
        {
          "description": "Echo the argument via the callback after setTimeout(10)",
          "name": "echoWithSetTimeout",
          "args": [
            {
              "name": "arg",
              "type": "string",
              "description": null
            },
            {
              "name": "callback",
              "type": "SDKTest~echo",
              "description": null
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "echo",
          "callbackArgIndex": 1,
          "callbackDtoType": "string"
        },
        {
          "description": "Fire an event",
          "name": "triggerFakeAfterTimeout",
          "args": []
        },
        {
          "description": "Return a complex object.",
          "name": "returnAnObject",
          "args": [],
          "returns": {
            "type": "SDKTestDefault",
            "description": "Stuff"
          }
        },
        {
          "description": "Return a derivative of SDKTestDefault",
          "name": "returnADerivedObject",
          "args": [],
          "returns": {
            "type": "SDKTestDefault",
            "description": "Stuff"
          }
        },
        {
          "description": "Return one SDKTestDefault and one derived",
          "name": "returnBaseAndDerived",
          "args": [],
          "returns": {
            "type": "[SDKTestDefault]",
            "description": "array of size 2"
          }
        },
        {
          "description": "Pre decrement within an indexer --j.\nCreate array c= [a,b], set j=1, set c[--j] = c[j]+add\npush j to c and return c\nexpected result: c[0] is set to c[0]+add, so, [a+add,b,0]",
          "name": "preDecrement",
          "args": [
            {
              "name": "a",
              "type": "int",
              "description": null
            },
            {
              "name": "b",
              "type": "int",
              "description": null
            },
            {
              "name": "add",
              "type": "int",
              "description": null
            }
          ],
          "returns": {
            "type": "[int]",
            "description": "Stuff"
          }
        },
        {
          "description": "Post decrement within an indexer j--.\nCreate array c= [a,b], set j=1, set c[j--] = c[j]+add\npush j to c and return c\nexpected result: c[1] is set to c[0]+add, so, [a,a+add, 0]",
          "name": "postDecrement",
          "args": [
            {
              "name": "a",
              "type": "int",
              "description": null
            },
            {
              "name": "b",
              "type": "int",
              "description": null
            },
            {
              "name": "add",
              "type": "int",
              "description": null
            }
          ],
          "returns": {
            "type": "[int]",
            "description": "Stuff"
          }
        },
        {
          "description": "Return a JS dictionary",
          "name": "returnAMixedType",
          "args": [],
          "returns": {
            "type": "object",
            "description": "Stuff"
          }
        },
        {
          "description": "Take a JS dictionary and return it",
          "name": "takeAMixedType",
          "args": [
            {
              "name": "stuff",
              "type": "object",
              "description": null
            }
          ],
          "returns": {
            "type": "object",
            "description": "Stuff"
          }
        },
        {
          "description": "Throw an exception",
          "name": "throwOne",
          "args": []
        },
        {
          "description": "Fetch some JSON from httpbin.org",
          "name": "goFetch",
          "args": [
            {
              "name": "callback",
              "type": "SDKTest~fetched",
              "description": "Called on completion"
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "fetched",
          "callbackArgIndex": 0,
          "callbackDtoType": "object"
        }
      ],
      "staticMethods": [
        {
          "description": "Returns a new instance of this class",
          "name": "staticMethod",
          "args": [],
          "returns": {
            "type": "SDKTest",
            "description": "instance"
          }
        }
      ],
      "fields": [
        {
          "name": "itsOne",
          "type": "int",
          "description": "Starts out as 1."
        },
        {
          "name": "cantTouchThis",
          "type": "int",
          "description": "This is @readonly",
          "readonly": true
        },
        {
          "name": "stringProperty",
          "type": "string",
          "description": "This is a plain old string property"
        },
        {
          "name": "accessorString",
          "type": "string",
          "description": "This property has accessor functions in JS"
        },
        {
          "name": "complexType",
          "type": "SDKTestDefault",
          "description": "Yep."
        },
        {
          "name": "myStatus",
          "type": "SDKTest.Statuses",
          "description": "fake enum for status."
        }
      ],
      "innerTypes": {
        "Statuses": {
          "name": "Statuses",
          "description": "Valid SDK statuses",
          "filename": "test/js-source/SDKTest.js",
          "location": {
            "start": {
              "line": 223,
              "column": 0
            },
            "end": {
              "line": 238,
              "column": 1
            }
          },
          "values": [
            {
              "name": "ON_FIRE",
              "description": "comments matter apparently",
              "value": 0
            },
            {
              "name": "WET",
              "description": "you must write one",
              "value": 1
            },
            {
              "name": "UNINMAGINABLE",
              "description": "just, shhhh.",
              "value": 2
            }
          ],
          "enum": true,
          "type": "int",
          "packedName": "SDKTestStatuses",
          "dottedName": "SDKTest.Statuses"
        }
      },
      "packedName": "SDKTest",
      "dottedName": "SDKTest",
      "instanceConstructor": {
        "description": "Make the class with a particular stringProperty setting",
        "args": [
          {
            "name": "stringProperty",
            "type": "string",
            "description": "initial setting"
          }
        ]
      },
      "events": [
        {
          "name": "fakeEvent",
          "description": "Simple event",
          "containingType": "SDKTest",
          "args": [
            {
              "name": "item",
              "type": "SDKTestDefault",
              "description": "An item."
            }
          ]
        }
      ],
      "callbacks": [
        {
          "description": "Callback for fetch method",
          "args": [
            {
              "name": "error",
              "type": "error",
              "description": "What went wrong"
            },
            {
              "name": "response",
              "type": "object",
              "description": "What the server said"
            }
          ],
          "name": "fetched",
          "type": "SDKTest"
        },
        {
          "description": "Callback for echo method",
          "args": [
            {
              "name": "error",
              "type": "error",
              "description": "What went wrong"
            },
            {
              "name": "arg",
              "type": "string",
              "description": "What you said"
            }
          ],
          "name": "echo",
          "type": "SDKTest"
        },
        {
          "description": "Callback for echo method with return",
          "args": [],
          "name": "echoReturn",
          "returns": {
            "type": "string",
            "description": "arg What you said"
          },
          "type": "SDKTest"
        }
      ]
    },
    {
      "name": "Statuses",
      "description": "Valid SDK statuses",
      "filename": "test/js-source/SDKTest.js",
      "location": {
        "start": {
          "line": 223,
          "column": 0
        },
        "end": {
          "line": 238,
          "column": 1
        }
      },
      "values": [
        {
          "name": "ON_FIRE",
          "description": "comments matter apparently",
          "value": 0
        },
        {
          "name": "WET",
          "description": "you must write one",
          "value": 1
        },
        {
          "name": "UNINMAGINABLE",
          "description": "just, shhhh.",
          "value": 2
        }
      ],
      "enum": true,
      "type": "int",
      "packedName": "SDKTestStatuses",
      "dottedName": "SDKTest.Statuses"
    },
    {
      "name": "SDKTestDefault",
      "filename": "test/js-source/SDKTestDefault.js",
      "description": "",
      "methods": [
        {
          "description": "Test closure",
          "name": "isItTrue",
          "args": [],
          "returns": {
            "type": "bool",
            "description": "true"
          }
        }
      ],
      "staticMethods": [],
      "fields": [
        {
          "name": "test",
          "type": "int",
          "description": "It's 1"
        },
        {
          "name": "itsTrue",
          "type": "bool",
          "description": "It's true"
        },
        {
          "name": "itsFalse",
          "type": "bool",
          "description": "It's false"
        },
        {
          "name": "blankInt",
          "type": "int",
          "description": "Starts blank"
        },
        {
          "name": "intOne",
          "type": "int",
          "description": "Starts 1"
        },
        {
          "name": "blankDecimal",
          "type": "decimal",
          "description": "Starts blank"
        },
        {
          "name": "decimalHundredOhOne",
          "type": "decimal",
          "description": "Starts 100.01"
        },
        {
          "name": "nullString",
          "type": "string",
          "description": "It's a null string."
        },
        {
          "name": "now",
          "type": "Date",
          "description": "It's now"
        },
        {
          "name": "stringArray",
          "type": "[string]",
          "description": "An array of a, b, c"
        }
      ],
      "innerTypes": {},
      "packedName": "SDKTestDefault",
      "dottedName": "SDKTestDefault",
      "subclasses": [
        {
          "name": "SDKTestDefaultSubclass",
          "filename": "test/js-source/SDKTestDefault.js",
          "description": "",
          "methods": [
            {
              "description": "Test subclass",
              "name": "isItDerived",
              "args": [],
              "returns": {
                "type": "bool",
                "description": "true"
              }
            }
          ],
          "staticMethods": [
            {
              "description": "Test derived classes",
              "name": "getDerived",
              "args": [],
              "returns": {
                "type": "SDKTestDefault",
                "description": null
              }
            }
          ],
          "fields": [],
          "innerTypes": {},
          "inherits": "SDKTestDefault",
          "packedName": "SDKTestDefaultSubclass",
          "dottedName": "SDKTestDefaultSubclass"
        }
      ]
    },
    {
      "name": "SDKTestDefaultSubclass",
      "filename": "test/js-source/SDKTestDefault.js",
      "description": "",
      "methods": [
        {
          "description": "Test subclass",
          "name": "isItDerived",
          "args": [],
          "returns": {
            "type": "bool",
            "description": "true"
          }
        }
      ],
      "staticMethods": [
        {
          "description": "Test derived classes",
          "name": "getDerived",
          "args": [],
          "returns": {
            "type": "SDKTestDefault",
            "description": null
          }
        }
      ],
      "fields": [],
      "innerTypes": {},
      "inherits": "SDKTestDefault",
      "packedName": "SDKTestDefaultSubclass",
      "dottedName": "SDKTestDefaultSubclass"
    }
  ],
  "classes": [
    {
      "name": "SDKTest",
      "filename": "test/js-source/SDKTest.js",
      "description": "This single file basically fakes the real SDK and exercises the various ways the native engines\ninteract with Javascript.",
      "methods": [
        {
          "description": "Echo the argument via the callback",
          "name": "echo",
          "args": [
            {
              "name": "arg",
              "type": "string",
              "description": null
            },
            {
              "name": "callback",
              "type": "SDKTest~echo",
              "description": null
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "echo",
          "callbackArgIndex": 1,
          "callbackDtoType": "string"
        },
        {
          "description": "Echo the argument via return value from a callback",
          "name": "echoReturn",
          "args": [
            {
              "name": "arg",
              "type": "string",
              "description": null
            },
            {
              "name": "callback",
              "type": "SDKTest~echoReturn",
              "description": null
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "echoReturn",
          "callbackArgIndex": 1
        },
        {
          "description": "Echo the argument via the callback after setTimeout(10)",
          "name": "echoWithSetTimeout",
          "args": [
            {
              "name": "arg",
              "type": "string",
              "description": null
            },
            {
              "name": "callback",
              "type": "SDKTest~echo",
              "description": null
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "echo",
          "callbackArgIndex": 1,
          "callbackDtoType": "string"
        },
        {
          "description": "Fire an event",
          "name": "triggerFakeAfterTimeout",
          "args": []
        },
        {
          "description": "Return a complex object.",
          "name": "returnAnObject",
          "args": [],
          "returns": {
            "type": "SDKTestDefault",
            "description": "Stuff"
          }
        },
        {
          "description": "Return a derivative of SDKTestDefault",
          "name": "returnADerivedObject",
          "args": [],
          "returns": {
            "type": "SDKTestDefault",
            "description": "Stuff"
          }
        },
        {
          "description": "Return one SDKTestDefault and one derived",
          "name": "returnBaseAndDerived",
          "args": [],
          "returns": {
            "type": "[SDKTestDefault]",
            "description": "array of size 2"
          }
        },
        {
          "description": "Pre decrement within an indexer --j.\nCreate array c= [a,b], set j=1, set c[--j] = c[j]+add\npush j to c and return c\nexpected result: c[0] is set to c[0]+add, so, [a+add,b,0]",
          "name": "preDecrement",
          "args": [
            {
              "name": "a",
              "type": "int",
              "description": null
            },
            {
              "name": "b",
              "type": "int",
              "description": null
            },
            {
              "name": "add",
              "type": "int",
              "description": null
            }
          ],
          "returns": {
            "type": "[int]",
            "description": "Stuff"
          }
        },
        {
          "description": "Post decrement within an indexer j--.\nCreate array c= [a,b], set j=1, set c[j--] = c[j]+add\npush j to c and return c\nexpected result: c[1] is set to c[0]+add, so, [a,a+add, 0]",
          "name": "postDecrement",
          "args": [
            {
              "name": "a",
              "type": "int",
              "description": null
            },
            {
              "name": "b",
              "type": "int",
              "description": null
            },
            {
              "name": "add",
              "type": "int",
              "description": null
            }
          ],
          "returns": {
            "type": "[int]",
            "description": "Stuff"
          }
        },
        {
          "description": "Return a JS dictionary",
          "name": "returnAMixedType",
          "args": [],
          "returns": {
            "type": "object",
            "description": "Stuff"
          }
        },
        {
          "description": "Take a JS dictionary and return it",
          "name": "takeAMixedType",
          "args": [
            {
              "name": "stuff",
              "type": "object",
              "description": null
            }
          ],
          "returns": {
            "type": "object",
            "description": "Stuff"
          }
        },
        {
          "description": "Throw an exception",
          "name": "throwOne",
          "args": []
        },
        {
          "description": "Fetch some JSON from httpbin.org",
          "name": "goFetch",
          "args": [
            {
              "name": "callback",
              "type": "SDKTest~fetched",
              "description": "Called on completion"
            }
          ],
          "hasCallbackArg": true,
          "callbackMethodName": "fetched",
          "callbackArgIndex": 0,
          "callbackDtoType": "object"
        }
      ],
      "staticMethods": [
        {
          "description": "Returns a new instance of this class",
          "name": "staticMethod",
          "args": [],
          "returns": {
            "type": "SDKTest",
            "description": "instance"
          }
        }
      ],
      "fields": [
        {
          "name": "itsOne",
          "type": "int",
          "description": "Starts out as 1."
        },
        {
          "name": "cantTouchThis",
          "type": "int",
          "description": "This is @readonly",
          "readonly": true
        },
        {
          "name": "stringProperty",
          "type": "string",
          "description": "This is a plain old string property"
        },
        {
          "name": "accessorString",
          "type": "string",
          "description": "This property has accessor functions in JS"
        },
        {
          "name": "complexType",
          "type": "SDKTestDefault",
          "description": "Yep."
        },
        {
          "name": "myStatus",
          "type": "SDKTest.Statuses",
          "description": "fake enum for status."
        }
      ],
      "innerTypes": {
        "Statuses": {
          "name": "Statuses",
          "description": "Valid SDK statuses",
          "filename": "test/js-source/SDKTest.js",
          "location": {
            "start": {
              "line": 223,
              "column": 0
            },
            "end": {
              "line": 238,
              "column": 1
            }
          },
          "values": [
            {
              "name": "ON_FIRE",
              "description": "comments matter apparently",
              "value": 0
            },
            {
              "name": "WET",
              "description": "you must write one",
              "value": 1
            },
            {
              "name": "UNINMAGINABLE",
              "description": "just, shhhh.",
              "value": 2
            }
          ],
          "enum": true,
          "type": "int",
          "packedName": "SDKTestStatuses",
          "dottedName": "SDKTest.Statuses"
        }
      },
      "packedName": "SDKTest",
      "dottedName": "SDKTest",
      "instanceConstructor": {
        "description": "Make the class with a particular stringProperty setting",
        "args": [
          {
            "name": "stringProperty",
            "type": "string",
            "description": "initial setting"
          }
        ]
      },
      "events": [
        {
          "name": "fakeEvent",
          "description": "Simple event",
          "containingType": "SDKTest",
          "args": [
            {
              "name": "item",
              "type": "SDKTestDefault",
              "description": "An item."
            }
          ]
        }
      ],
      "callbacks": [
        {
          "description": "Callback for fetch method",
          "args": [
            {
              "name": "error",
              "type": "error",
              "description": "What went wrong"
            },
            {
              "name": "response",
              "type": "object",
              "description": "What the server said"
            }
          ],
          "name": "fetched",
          "type": "SDKTest"
        },
        {
          "description": "Callback for echo method",
          "args": [
            {
              "name": "error",
              "type": "error",
              "description": "What went wrong"
            },
            {
              "name": "arg",
              "type": "string",
              "description": "What you said"
            }
          ],
          "name": "echo",
          "type": "SDKTest"
        },
        {
          "description": "Callback for echo method with return",
          "args": [],
          "name": "echoReturn",
          "returns": {
            "type": "string",
            "description": "arg What you said"
          },
          "type": "SDKTest"
        }
      ]
    },
    {
      "name": "SDKTestDefault",
      "filename": "test/js-source/SDKTestDefault.js",
      "description": "",
      "methods": [
        {
          "description": "Test closure",
          "name": "isItTrue",
          "args": [],
          "returns": {
            "type": "bool",
            "description": "true"
          }
        }
      ],
      "staticMethods": [],
      "fields": [
        {
          "name": "test",
          "type": "int",
          "description": "It's 1"
        },
        {
          "name": "itsTrue",
          "type": "bool",
          "description": "It's true"
        },
        {
          "name": "itsFalse",
          "type": "bool",
          "description": "It's false"
        },
        {
          "name": "blankInt",
          "type": "int",
          "description": "Starts blank"
        },
        {
          "name": "intOne",
          "type": "int",
          "description": "Starts 1"
        },
        {
          "name": "blankDecimal",
          "type": "decimal",
          "description": "Starts blank"
        },
        {
          "name": "decimalHundredOhOne",
          "type": "decimal",
          "description": "Starts 100.01"
        },
        {
          "name": "nullString",
          "type": "string",
          "description": "It's a null string."
        },
        {
          "name": "now",
          "type": "Date",
          "description": "It's now"
        },
        {
          "name": "stringArray",
          "type": "[string]",
          "description": "An array of a, b, c"
        }
      ],
      "innerTypes": {},
      "packedName": "SDKTestDefault",
      "dottedName": "SDKTestDefault",
      "subclasses": [
        {
          "name": "SDKTestDefaultSubclass",
          "filename": "test/js-source/SDKTestDefault.js",
          "description": "",
          "methods": [
            {
              "description": "Test subclass",
              "name": "isItDerived",
              "args": [],
              "returns": {
                "type": "bool",
                "description": "true"
              }
            }
          ],
          "staticMethods": [
            {
              "description": "Test derived classes",
              "name": "getDerived",
              "args": [],
              "returns": {
                "type": "SDKTestDefault",
                "description": null
              }
            }
          ],
          "fields": [],
          "innerTypes": {},
          "inherits": "SDKTestDefault",
          "packedName": "SDKTestDefaultSubclass",
          "dottedName": "SDKTestDefaultSubclass"
        }
      ]
    },
    {
      "name": "SDKTestDefaultSubclass",
      "filename": "test/js-source/SDKTestDefault.js",
      "description": "",
      "methods": [
        {
          "description": "Test subclass",
          "name": "isItDerived",
          "args": [],
          "returns": {
            "type": "bool",
            "description": "true"
          }
        }
      ],
      "staticMethods": [
        {
          "description": "Test derived classes",
          "name": "getDerived",
          "args": [],
          "returns": {
            "type": "SDKTestDefault",
            "description": null
          }
        }
      ],
      "fields": [],
      "innerTypes": {},
      "inherits": "SDKTestDefault",
      "packedName": "SDKTestDefaultSubclass",
      "dottedName": "SDKTestDefaultSubclass"
    }
  ],
  "enums": [
    {
      "name": "Statuses",
      "description": "Valid SDK statuses",
      "filename": "test/js-source/SDKTest.js",
      "location": {
        "start": {
          "line": 223,
          "column": 0
        },
        "end": {
          "line": 238,
          "column": 1
        }
      },
      "values": [
        {
          "name": "ON_FIRE",
          "description": "comments matter apparently",
          "value": 0
        },
        {
          "name": "WET",
          "description": "you must write one",
          "value": 1
        },
        {
          "name": "UNINMAGINABLE",
          "description": "just, shhhh.",
          "value": 2
        }
      ],
      "enum": true,
      "type": "int",
      "packedName": "SDKTestStatuses",
      "dottedName": "SDKTest.Statuses"
    }
  ],
  "allCallbacks": [
    {
      "description": "Callback for fetch method",
      "args": [
        {
          "name": "error",
          "type": "error",
          "description": "What went wrong"
        },
        {
          "name": "response",
          "type": "object",
          "description": "What the server said"
        }
      ],
      "name": "fetched",
      "type": "SDKTest"
    },
    {
      "description": "Callback for echo method",
      "args": [
        {
          "name": "error",
          "type": "error",
          "description": "What went wrong"
        },
        {
          "name": "arg",
          "type": "string",
          "description": "What you said"
        }
      ],
      "name": "echo",
      "type": "SDKTest"
    },
    {
      "description": "Callback for echo method with return",
      "args": [],
      "name": "echoReturn",
      "returns": {
        "type": "string",
        "description": "arg What you said"
      },
      "type": "SDKTest"
    }
  ],
  "referencedTypes": [
    "int",
    "string",
    "SDKTestDefault",
    "SDKTest.Statuses",
    "error",
    "object",
    "SDKTest~echo",
    "SDKTest~echoReturn",
    "SDKTest~fetched",
    "bool",
    "decimal",
    "Date"
  ],
  "languageSettings": {
    "typeMap": {
      "string": "String",
      "decimal": "BigDecimal",
      "bool": "Boolean",
      "int": "Integer",
      "object": "Map\u003cString,? super Object>",
      "error": "ManticoreException"
    },
    "arrayType": "List\u003c%s>",
    "arrayIsTyped": true,
    "callbackSuffix": "Callback",
    "innerCallbacksAndEvents": true,
    "customConverters": [
      "object",
      "decimal",
      "Date"
    ],
    "nativeConverters": {
      "bool": "Boolean",
      "string": "String",
      "int": "Integer"
    },
    "extensions": {
      "impl": ".java",
      "enum": ".java",
      "class": ".java"
    },
    "typePrefix": "",
    "namespace": "com.paypal.manticore",
    "baseClass": "JsBackedObject"
  },
  "typePrefix": "",
  "baseClass": "JsBackedObject",
  "namespace": "com.paypal.manticore"
}