using Jint;
using Jint.Native;
using Jint.Native.Object;
using Jint.Native.Function;
using Jint.Runtime.Interop;
using System;
using System.Collections.Generic;
using Manticore;

/**
 * SDKTestDefaultSubclass.cs
 * 
 * DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED AND SHOULD NOT BE CHECKED IN.
 * 
 *
* 
 */
namespace Manticore
{
  public class SDKTestDefaultSubclass : SDKTestDefault {


  internal SDKTestDefaultSubclass(ObjectInstance value) : base(value) {
  }


  public SDKTestDefaultSubclass() {
    this.impl = Engine.CreateJsObject("SDKTestDefaultSubclass", ManticoreEngine.EmptyArgs);
  }


  new internal static SDKTestDefaultSubclass NativeInstanceForObject(ObjectInstance value) {
    if (value == null) {
      return null;
    }

    return new SDKTestDefaultSubclass(value);
  }
  /**
   * Test subclass
   */
  public  bool IsItDerived() {
    JsValue[] args = new JsValue[] {
      
    };
    
    var func = this.impl.Get("isItDerived").As<FunctionInstance>();
      return Engine.JsWithReturn(() => {
      var returnValue = func.Call(this.impl, args);
      return Engine.Converter.AsNativeBool(returnValue);
    });
  }
  /**
   * Test derived classes
   */
  public static SDKTestDefault GetDerived() {
    JsValue[] args = new JsValue[] {
      
    };
    var jsClass = Engine.GetJsClass("SDKTestDefaultSubclass");
    var func = jsClass.Get("getDerived").As<FunctionInstance>();
      return Engine.JsWithReturn(() => {
      var returnValue = func.Call(jsClass, args);
      return ((returnValue.IsNull()||returnValue.IsUndefined()) ? null : SDKTestDefault.NativeInstanceForObject(returnValue.AsObject()));
    });
  }




  }
}
